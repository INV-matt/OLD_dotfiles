; VARS

(defvar eww "/usr/bin/eww")

; A bunch of system polls
(defpoll hour :interval "1s" :initial "00" `date +%H`)
(defpoll mins :interval "1s" :initial "00" `date +%M`)
(defpoll my_date :interval "1s" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --date)`)

(defpoll outputs :interval "0.1s" :initial "[]" `echo $(python3 ./scripts/workspaces.py) | cut -d "!" -f2`)

(defpoll volpercent :interval ".1s" `echo $(python3 /home/matteo/.config/eww/scripts/my_vol.py get)` )
(defpoll volicon :interval ".1s" `echo $(python3 /home/matteo/.config/eww/scripts/my_vol.py icon)` )
(defpoll brightness :interval ".1s" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --per-brightness)` )

(defpoll title :interval ".5s" `echo $(python3 /home/matteo/.config/eww/scripts/music.py --title)` )
(defpoll artist :interval ".5s" `echo $(python3 /home/matteo/.config/eww/scripts/music.py --artist)` )
(defpoll playpause :interval ".2s" `echo $(python3 /home/matteo/.config/eww/scripts/music.py --icon)` )
(defpoll music_art :interval ".5s" `echo $(python3 /home/matteo/.config/eww/scripts/music.py --art)` )
(defpoll pos :interval ".3s" `echo $(python3 /home/matteo/.config/eww/scripts/music.py --pos)` )

(defpoll cpu :interval "1s" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --cpu)`)
(defpoll mem :interval "1s" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --mem)`)
(defpoll up :interval "1s" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --up)`)
(defpoll pack :interval "1s" `pacman -Q | wc -l`)

(defpoll weather :interval "5s" :initial "-°C" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --weather)`)
(defpoll w_icon :interval "5s" :initial "" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --w_icon)`)

(deflisten workspace "./scripts/bspwmWs.sh")
(defpoll win :interval ".1s" `echo $(python3 /home/matteo/.config/eww/scripts/sys_info.py --win)`)


; MAIN BAR

(defwidget launcher []
  (box :class ""
    :orientation "v"
    :space-evenly true
    :spacing 0
    :vexpand true
    (button :class "icon hov launcher"
      :onclick "rofi -show drun &"
      (label :text "" :style "background-color: rgba(0,0,0,0);")))
)

(defwidget d_widgets []
  (box
    :class "d_widgets"
    :orientation "vertical"
    :valin "fill"
    :halign "fill"
    :vexpand true
    :hexpand true
    
    (button :class ""
      :onclick "eww open-many --toggle widgets"
      (label :text "" ))
  )
)

(defwidget clock []
  (box
    :class "clock box"
    :orientation "h"
    :halign "fill"
    :valign "fill"
    :space-evenly false
    :vexpand false
    (label :text hour :class "hour")
    (label :text ":")
    (label :text mins :class "mins")
    (label :width 16 :text "")
    (d_widgets)
  )
)

(defwidget i-workspaces [] ;i3 workspaces
  (box
    :orientation "vertical"
    :valign "start"
    :class "workspaces"
    
    (for output in outputs
      (box
        :orientation "vertical"
        :class "workspace"
        (box
          :halign "center"
          :class "output"
          :orientation "v"
          
          (for wk in "${output['wks']}"
            (label
              :text "${wk['focused'] ? '' : ''}"
              :class "${wk['focused'] ? 'ws_focused' : ''}"
              
            )))))))

(defwidget workspaces [] ;BSPWM workspaces
  (literal :content workspace
    :vexpand true
    :valign "fill"
  )
)

(defwidget bar_music []
  (box :class "b_music box"
    :orientation "h"
    :space-evenly false
    :spacing 12
    
    (label :text "" :class "icon")
    (label :text "${title}" :class "b_l_music")
  )
)

(defwidget bar_weather []
  (box :class "b_weather box"
    :orientation "h"
    :spacing 8
    
    (box :width 20 :class "w_icon" :style "background-image: url('${w_icon}')")
    (label :text weather)
  )
)



(defwidget bar_stats []
  (box
    :space-evenly false
    
    (revealer
      :reveal vStats
      :transition "slideleft"
      (box :class "b_stats box"
        :style "margin-right: 16px;"
        :orientation "h"
        :spacing 16
        
        (box :orientation "h"
          :space-evenly false
          :spacing 6
          (label :style "font-size: 24px;" :text "")
          (label :text "${cpu}%")
        )
        
        (box :orientation "h"
          :space-evenly false
          :spacing 6
          (label :style "font-size: 24px;" :text "﬙")
          (label :text "${mem}%")
        )
      )
    )
    (button :class "icon reveal_stat"
      :onclick "eww update vStats=${!vStats}"
      ""
    )
  )
)
(defvar vStats false)

(defwidget f_win []
  (box :class "f_win box"
    (label :text win)
  )
)



(defwidget top [] ;LEFT
  (box
    :class "top"
    :orientation "h"
    :halign "start"
    :valign "center"
    :vexpand true
    :hexpand false
    :space-evenly false
    :spacing 16
    
    (workspaces)
  )
)

(defwidget mid []
  (box
    :class "mid"
    :orientation "h"
    :halign "center"
    :valign "center"
    :vexpand true
    :hexpand false
    :space-evenly false
    
    (f_win)
  )
)

(defwidget bottom [] ;RIGHT
  (box
    :class "bottom"
    :orientation "h"
    :halign "end"
    :valign "fill"
    :vexpand false
    :hexpand false
    :space-evenly false
    :spacing 16
    
    (bar_music)
    (bar_stats)
    (bar_weather)
    (clock)
  )
)

(defwidget bar []
  (box
    :class "bar"
    :orientation "h"
    :halign "fill"
    :vexpand false
    :hexpand false
    (top)
    (mid)
    (bottom)
  )
)

; WIDGETS
(defwidget music []
  (box
    :orientation "h"
    :space-evenly false
    :spacing -10
    :halign "fill"
    :valign "fill"
    :class "music_container"
    :hexpand "false"
    :vexpand "false"
    
    
    (box
      :style "background-image: url('${ music_art }');"
      :class "music_art"
      :vexpand "false"
      :hexpand "false"
      :width "10px"
    )
    (box
      :class "music_player"
      :orientation "v"
      :valign "center"
      :halign "fill"
      :width 200
      :hexpand true
      :space-evenly false
      
      (box
        :orientation "v"
        :class "music_info"
        :valign "fill"
        :halign "center"
        :vepand false
        :hexpand false
        (label
          :class "title"
          :limit-width 20
          :text title
        )
        ;(label
          ;  :class "artist"
          ;  :limit-width 20
          ;  :text artist
        ;)
      )
      (box
        :orientation "h"
        :space-evenly "false"
        :valign "center"
        :halign "center"
        :spacing 36
        (button :class "prev" :onclick "playerctl previous" (label  :text "玲"))
        (button :class "plpause" :onclick "playerctl play-pause" (label :text playpause))
        (button :class "next" :onclick "playerctl next" (label :text "怜"))
      )
      (box :class "music_prog"
        (scale :class "mus_scale" :min 0 :max 101 :active false :value pos )
      )
    )
  )
)

(defwidget time []
  (box :class "time hm_time"
    :orientation "h"
    :space-evenly false
    :halign "center"
    (label :text "${hour}:${mins} | ${my_date}")
  )
)

(defwidget profile []
  (box
    :orientation "v"
    :space-evenly false
    :class "profile"
    :halign "fill"
    (box
      :orientation "h"
      :space-evenly false
      (box
        :class "pfp"
        :width "10px"
      )
      (box
        :class "p_name"
        (label :text "INVmatt" )
      ))
    (box :class "quote"
      (label :width 128
        :wrap true
      :text "“I've found a truly marvelous quote to write here, which this margin is too narrow to contain”")
    )
  )
)

(defwidget pc_info []
  (box :class "pc_info"
    :orientation "v"
    (box :class "info"
      :orientation "h"
      :space-evenly false
      :spacing 16
      (label :class "info_icon" :text "")
      (label :class "l_info" :text "arch")
    )
    (box :class "info"
      :orientation "h"
      :space-evenly false
      :spacing 16
      (label :class "info_icon" :text "")
      (label :class "l_info" :text "bspwm")
    )
    (box :class "info"
      :orientation "h"
      :space-evenly false
      :spacing 16
      (label :class "info_icon" :text "")
      (label :class "l_info" :text pack)
    )
    (box :class "info"
      :orientation "h"
      :space-evenly false
      :spacing 16
      (label :class "info_icon" :text "")
      (label :class "l_info" :text up)
    )
    (box :class "info"
      :orientation "h"
      :space-evenly false
      :spacing 16
      (label :class "info_icon" :text "")
      (label :class "l_info" :text "5600G")
    )
    
  )
)

(defwidget btns []
  (box :class "btns"
    :orientation "v"
    :spacing 8
    :hexpand true
    
    (box
      :orientation "h"
      :spacing 8
      (button :class "btn" :onclick "thunar ~ &" "")
      (button :class "btn" :onclick "code" "")
    )
    (box
      :orientation "h"
      :spacing 8
      (button :class "btn" :onclick "firefox " "")
      (button :class "btn" :onclick "firefox -P Scuola &" "")
    )
    (box
      :orientation "h"
      :spacing 8
      (button :class "btn" :onclick "discord &" "ﭮ")
      (button :class "btn" :onclick "spotify &" "")
    )
  )
)

(defwidget info&btns []
  (box :orientation "h"
    :space-evenly false
    :spacing 16
    :class "info_btns"
    (pc_info)
    (btns)
  )
  
)

(defwidget stats []
  (box :class "stats_container"
    :orientation "v"
    :spacing 8
    (box :class "stat"
      :orientation "h"
      :space-evenly false
      (scale :min 0 :max 101 :active false :value cpu :class "scale-cpu" :width 400 )
      (label :text "" :class "stat_icon")
    )
    (box :class "stat"
      :orientation "h"
      :space-evenly false
      (scale :min 0 :max 101 :active false :value mem :class "scale-mem" :width 400 )
      (label :text "﬙" :class "stat_icon")
    )
  )
)

(defwidget sliders []
  (box :class "stats_container"
    :orientation "v"
    :spacing 8
    (box       :class "stat "
      :orientation "h"
      :space-evenly "false"
      (scale :min 0 :max 100 :active true :value volpercent :onchange "python3 /home/matteo/.config/eww/scripts/my_vol.py set {}" :class "scale-vol" :width 400 )
      (eventbox
        :onclick "python3 /home/matteo/.config/eww/scripts/my_vol.py mute"
        (label :text volicon :class "stat_icon"))
    )
    (box       :class "stat "
      :orientation "h"
      :space-evenly "false"
      (scale :min 0 :max 100 :active true :value brightness :onchange "python3 /home/matteo/.config/eww/scripts/sys_info.py --set-bright {}" :class "scale-vol" :width 400 )
      (eventbox
        :onclick "xrandr --output HDMI-A-0 --brightness 1"
        (label :text "" :class "stat_icon"))
    )
    
  )
)


(defwidget w_powermenu []
  (box :class "w_powermenu"
    :orientation "h"
    :spacing 8
    
    (button :class "btn" :onclick "systemctl poweroff" "")
    (button :class "btn" :onclick "systemctl reboot" "")
    (button :class "btn" :onclick "bspc quit" "﫼")
    (button :class "btn" :onclick "systemctl suspend" "")
  )
)

(defwidget widgets []
  (box
    :class "widgets"
    :space-evenly false
    :orientation "v"
    (time)
    (profile)
    (music)
    (stats)
    (sliders)
    (info&btns)
    (w_powermenu)
  )
)


; SHUTDOWN



; WINDOWS

(defwindow ewwbar
  :monitor 0
  :geometry (geometry
    :x "0px" :y "0px"
    :width "1920px" :height "24px"
    :anchor "center top"
  )
  
  :stacking "bg"
  :focusable true
  :vexpand false
  :hexpand false
  
  :wm-ignore false
  :reserve (struts :distance "36px" :side "top")
  :exclusive true
  
  (bar)
)

(defwindow widgets
  :monitor 0
  :geometry (geometry
    :x "-12px" :y "49px"
    :width "300px" :height "200px"
    :anchor "right top"
  )
  
  :stacking "bg"
  :focusable true
  :wm-ignore true
  :vexpand true
  :hexpand false
  (widgets)
)